import requests
from bs4 import BeautifulSoup as BS
import telebot
from telebot import types

TOKEN = '1144242422:AAFTVCf6jzmL_Q_7hH-1BI5Z6BriuyI2Jww' # Token –∏–∑ Botfather
url_letters = 'http://www.1000mest.ru/' # –°–∞–π—Ç –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –±–æ—Ç–∞
bot = telebot.TeleBot(TOKEN)


# –ü–∞—Ä—Å–∏–º –≤—Å–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –≥–æ—Ä–æ–¥–æ–≤
r = requests.get('http://www.1000mest.ru/cityA')
html = BS(r.content, 'lxml')
urls_cities = html.find('div', class_='field-item even').find('h4').find_all('a')  # –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤—Å–µ –±—É–∫–≤—ã

city_letters = list()  # –°–ø–∏—Å–æ–∫ –±—É–∫–≤ —Å—Å—ã–ª–æ–∫
city_urls = list()  # –°–ø–∏—Å–æ–∫ —Å—Å—ã–ª–æ–∫ –Ω–∞ –±—É–∫–≤—ã
for i in range(len(urls_cities)):
    city_letters.append(urls_cities[i].get_text())  # –¢–µ–∫—Å—Ç —Å—Å—ã–ª–æ–∫ –Ω–∞ –≤—Å–µ –±—É–∫–≤—ã
    city_urls.append(urls_cities[i].get('href'))  # –ü—É—Ç—å —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤—Å–µ –±—É–∫–≤—ã

cities_names = list()  # –°–ø–∏—Å–æ–∫ —Å–ø–∏—Å–∫–æ–≤ –≤—Å–µ—Ö –≥–æ—Ä–æ–¥–æ–≤ –Ω–∞ –æ–¥–Ω—É –±—É–∫–≤—É


def NamesCitiesInitialization():
    for i in range(29):
        req = requests.get(url_letters + city_urls[i])  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –ø–æ —Å—Å—ã–ª–∫–µ –±—É–∫–≤—ã
        req_html = BS(req.content, 'lxml')  # –ü–∞—Ä—Å–∏–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
        all_table = req_html.find('div', class_='field-item even').find('table').find_all(
            'td')  # –ù–∞—Ö–æ–¥–∏–º —Ç–∞–±–ª–∏—Ü—É —Å –∏–º–µ–Ω–∞–º–∏ –≥–æ—Ä–æ–¥–æ–≤
        list_names = list()  # –°–ø–∏—Å–æ–∫ –≥–¥–µ —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤—Å–µ –≥–æ—Ä–æ–¥–∞ —Å –æ–¥–Ω–æ–π –±—É–∫–≤–æ–π
        for i in range(len(all_table)):  # –ü—Ä–æ—Ö–æ–¥–∏–º—Å—è –ø–æ –≤—Å–µ–π —Å—Ç—Ä–æ–∫–∞–º —Ç–∞–±–ª–∏—Ü—ã
            list_names.append(all_table[i].get_text())  # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Å—Ç—Ä–æ–∫–∏ —Ç–∞–±–ª–∏—Ü—ã
        cities_names.append(list_names)  # –í—Å–µ –∏–º–µ–Ω–∞ –≥–æ—Ä–æ–¥–æ–≤ –≤ –æ–±—â–∏–π —Å–ø–∏—Å–æ–∫

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–≥—Ä—ã
isPlay = False
isFirstInput = False
Answers = list()
CityCount = 0
NextLetter = ''


# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏–≥—Ä—ã "–ì–æ—Ä–æ–¥–∞"
def AnswersInitialization():  # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–ø–∏—Å–∫–æ–≤, –≥–¥–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –Ω–∞–∑–≤–∞–Ω–Ω—ã–µ –≥–æ—Ä–æ–¥–∞ –ø–æ –∏–Ω–¥–µ–∫—Å–∞–º
    for index in range(29):
        Answers.append(list())


def InputAI(word): # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –Ω–∞–∑–≤–∞—Ç—å –≥–æ—Ä–æ–¥ –ø–æ—Å–ª–µ –∏–≥—Ä–æ–∫–∞
    index_letter = CheckWord(GetNextLetter(word))
    for index in range(len(cities_names[index_letter])):
        if not CheckNameCity(index_letter, cities_names[index_letter][index]):
            Answers[index_letter].append(cities_names[index_letter][index])
            return cities_names[index_letter][index]
    return False


def CheckNameCity(index, name):  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±—ã–ª –ª–∏ –Ω–∞–∑–≤–∞–Ω –≥–æ—Ä–æ–¥
    return isExist(index, name)


def CheckNameInBase(index, name):  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º—è –≥–æ—Ä–æ–¥–∞ –≤ –±–∞–∑–µ
    for j in range(len(cities_names[index])):
        if name == cities_names[index][j]:
            return True
    return False


def GetNextLetter(name): # –£–∑–Ω–∞–µ–º —Å–ª–µ–¥—É—é—â–∏—é –±—É–∫–≤—É –ø–æ –∏–º–µ–Ω–∏ –≥–æ—Ä–æ–¥–∞
    for index in range(len(name)):
        check_letter = name[len(name) - 1 - index].lower()
        if check_letter == '—ë' or check_letter == '—å' or check_letter == '—ä' or check_letter == '—ã' or check_letter == ')' or check_letter == '(':
            continue
        return name[len(name) - 1 - index].upper()
    return False


def CheckWord(word):  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∑–∞–≥–ª–∞–≤–Ω–∞—è –±—É–∫–≤–∞ –≤ —Å–ª–æ–≤–µ
    for index in range(len(city_letters)):
        if city_letters[index] == word[0]:
            return index
    return -1

def EndGame():
    global isPlay
    global isFirstInput
    global CityCount
    isPlay = False
    isFirstInput = False
    CityCount = 0
    for i in range(29):
        Answers[i].clear()

def isExist(index, name):
    for i in range(len(Answers[index])):
        if Answers[index][i] == name:
            return True
    return False


@bot.message_handler(commands=['start'])  # –§—É–Ω–∫—Ü–∏—è –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /start
def welcome(message):
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∏–∫–µ—Ä –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ —á–∞—Ç
    stick = open('imgs/welcome.webp', 'rb')
    bot.send_sticker(message.chat.id, stick)
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä–Ω—É—é –∫–Ω–æ–ø–∫—É –ø–æ–¥ –æ–∫–Ω–æ–º –≤–≤–æ–¥–∞
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn = types.KeyboardButton('–ù–∞—á–∞—Ç—å –∏–≥—Ä—É üèò')
    markup.add(btn)
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    bot.send_message(message.chat.id,
                     "–ü—Ä–∏–≤–µ—Ç, {0.first_name}!\n–Ø - <b>{1.first_name}<b>, –±–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π –¥–ª—è –∏–≥—Ä—ã <b>–ì–æ—Ä–æ–¥–∞<b>.\n–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –Ω–∞–ø–∏—à–∏—Ç–µ '–ù–∞—á–∞—Ç—å –∏–≥—Ä—É'.".format(
                         message.from_user, bot.get_me(), parse_mode='html', reply_markup=markup))


@bot.message_handler(content_types=['text'])
def SendMessage(message):
    global isPlay
    global isFirstInput
    global NextLetter
    city_name = message.text
    if isFirstInput: # –ì–æ—Ä–æ–¥ —Å –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–∞—á–Ω–µ—Ç—Å—è –∏–≥—Ä–∞
        index_city = CheckWord(city_name)
        if city_name == '–ó–∞–≤–µ—Ä—à–∏—Ç—å':
            bot.send_message(message.chat.id, '–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É (–í—Å–µ–≥–æ –Ω–∞–∑–≤–∞–Ω–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤ ' + str(CityCount) + ')')
            EndGame()
            return
        elif index_city == -1: # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–≤–æ–¥ –∏–º—è –≥–æ—Ä–æ–¥–∞ –Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—é –±—É–∫–≤—É
            bot.send_message(message.chat.id, '–¢–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –Ω–µ—Ç!')
        elif not CheckNameInBase(index_city, city_name):  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–æ–π –≥–æ—Ä–æ–¥
            bot.send_message(message.chat.id, '–¢–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –Ω–µ—Ç!')
        else:
            # –ü—Ä–æ—à–ª–∏ –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏, –∑–∞—Å—á–∏—Ç—ã–≤–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏ –Ω–∞–∑—ã–≤–∞–µ–º –±–æ—Ç–æ–º
            CityCount += 1
            Answers[index_city].append(city_name)
            isFirstInput = False
            city_name = InputAI(city_name)
            if not city_name:
                bot.send_message(message.chat.id, '–ì–æ—Ä–æ–¥–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å\n–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É\n(–í—Å–µ–≥–æ –Ω–∞–∑–≤–∞–Ω–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤ ' + str(CityCount) + ')')
                EndGame()
            NextLetter = GetNextLetter(city_name)
            bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ –≥–æ—Ä–æ–¥ –Ω–∞ ' + str(NextLetter))
        return

    if isPlay: # –ù–µ –ø–µ—Ä–≤—ã–π –≤–≤–æ–¥
        index_city = CheckWord(city_name)
        if city_name == '–ó–∞–≤–µ—Ä—à–∏—Ç—å':
            bot.send_message(message.chat.id, '–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É (–í—Å–µ–≥–æ –Ω–∞–∑–≤–∞–Ω–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤ ' + str(CityCount) + ')')
            EndGame()
            return
        elif city_name[0] != NextLetter:
            bot.send_message(message.chat.id, '–ù—É–∂–Ω–∞ –Ω–∞ –±—É–∫–≤—É ' + str(NextLetter))
        elif index_city == -1:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–≤–æ–¥ –∏–º—è –≥–æ—Ä–æ–¥–∞ –Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—é –±—É–∫–≤—É
            bot.send_message(message.chat.id, '–¢–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –Ω–µ—Ç!')
        elif not CheckNameInBase(index_city, city_name):  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–æ–π –≥–æ—Ä–æ–¥
            bot.send_message(message.chat.id, '–¢–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –Ω–µ—Ç!')
        else:
            # –ü—Ä–æ—à–ª–∏ –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏, –∑–∞—Å—á–∏—Ç—ã–≤–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏ –Ω–∞–∑—ã–≤–∞–µ–º –±–æ—Ç–æ–º
            CityCount += 1
            Answers[index_city].append(city_name)
            city_name = InputAI(city_name)
            if not city_name:
                bot.send_message(message.chat.id,
                                 '–ì–æ—Ä–æ–¥–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å\n–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É\n(–í—Å–µ–≥–æ –Ω–∞–∑–≤–∞–Ω–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤ ' + str(
                                     CityCount) + ')')
                EndGame()
                return
            bot.send_message(message.chat.id, city_name)
            NextLetter = GetNextLetter(city_name)
            bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ –≥–æ—Ä–æ–¥ –Ω–∞ ' + str(NextLetter))
        return

    if message.text == '–ù–∞—á–∞—Ç—å –∏–≥—Ä—É üèò' or message.text == '–ù–∞—á–∞—Ç—å –∏–≥—Ä—É':
        isPlay = True
        isFirstInput = True
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –ª—é–±–æ–π –≥–æ—Ä–æ–¥')
    else:
        bot.send_message(message.chat.id, '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞')

# Main
NamesCitiesInitialization()
AnswersInitialization()
# –ó–∞–ø—É—Å–∫ telebot
bot.polling()


